
buildscript {
    dependencies {
        classpath "info.u-team.curse_gradle_uploader:curse_gradle_uploader:${curse_gradle_uploader_version}"
    }
}

plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version "2.2.3"
    id 'com.modrinth.minotaur' version "${minotaur_version}"
    id 'io.papermc.hangar-publish-plugin' version "${hangar_publish_version}"
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'info.u_team.curse_gradle_uploader'

apply from: "https://raw.githubusercontent.com/henkelmax/mod-gradle-scripts/${mod_gradle_script_version}/mod.gradle"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
    maven { url = 'https://libraries.minecraft.net/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://repo.viaversion.com/' }
}

dependencies {
    implementation "net.kyori:adventure-api:${adventure_api_version}"
    shadow "net.kyori:adventure-api:${adventure_api_version}"

    implementation "net.kyori:adventure-text-serializer-gson:${adventure_api_version}"
    shadow "net.kyori:adventure-text-serializer-gson:${adventure_api_version}"

    implementation "me.lucko:commodore:${commodore_version}"
    shadow "me.lucko:commodore:${commodore_version}"

    implementation "org.concentus:Concentus:${concentus_version}"
    shadow "org.concentus:Concentus:${concentus_version}"

    compileOnly "me.clip:placeholderapi:${placeholder_api_version}"

    compileOnly "com.viaversion:viaversion-bukkit:${viaversion_version}"
    compileOnly "com.viaversion:viaversion-common:${viaversion_version}"
}

processResources {
    filesMatching('plugin.yml') {
        expand 'version': version
    }
}

sourceSets {
    template {
        java {
            srcDir 'src/template/java'
        }
    }
    main {
        compileClasspath += sourceSets.template.output
        runtimeClasspath += sourceSets.template.output
    }
}

tasks.register('generateJava', Copy) {
    from 'src/template/java'
    into "${layout.buildDirectory.asFile.get()}/generated/java"
    expand 'compatibility_version': voicechat_compatibility_version,
            'target_bukkit_version': bukkit_version
}

sourceSets.main.java {
    srcDir "${layout.buildDirectory.asFile.get()}/generated/java"
}
compileJava.dependsOn generateJava

shadowJar {
    relocate 'net.kyori', 'de.maxhenkel.voicechat.net.kyori'
    relocate 'com.google.gson', 'de.maxhenkel.voicechat.gson'
    relocate 'me.lucko.commodore', 'de.maxhenkel.voicechat.commodore'
    relocate 'org.concentus', 'de.maxhenkel.voicechat.concentus'
    dependencies {
        exclude(dependency('com.mojang:brigadier:.*'))
        exclude(dependency('com.google.code.findbugs:jsr305:.*'))
    }
}

tasks.register('copyJarToServer') {
    doLast {
        delete {
            delete "${projectDir}/run/plugins/${archivesBaseName}-${version}.jar"
        }
        copy {
            from "${layout.buildDirectory.asFile.get()}/libs/${archivesBaseName}-${version}.jar"
            into "${projectDir}/run/plugins"
        }
    }
}

tasks {
    runServer {
        minecraftVersion(paper_version)
    }
}

build.finalizedBy(copyJarToServer)

tasks.register('runCraftBukkitServer') {
    doLast {
        javaexec {
            debug = true
            workingDir = "${projectDir}/run"
            main = '-jar';
            args = [
                    "${projectDir}/run/craftbukkit.jar",
                    'nogui'
            ]
        }
    }
}

tasks.register('runPaperServer') {
    doLast {
        javaexec {
            debug = true
            workingDir = "${projectDir}/run"
            main = '-jar';
            args = [
                    "${projectDir}/run/paper.jar",
                    'nogui'
            ]
        }
    }
}

build.dependsOn(shadowJar)
runServer.dependsOn(build)
runPaperServer.dependsOn(build)
